(.venv) nick@nick-Surface-Pro-9:~/WorkSpace/LearnAI-TF$ ll modules/
总计 48
drwxrwxr-x 3 nick nick 4096 10月 2 02:26 ./
drwxrwxr-x 11 nick nick 4096 10月 12 21:12 ../
-rw-rw-r-- 1 nick nick 886 10月 2 03:38 dataloader.py
-rw-rw-r-- 1 nick nick 941 10月 2 03:38 deployment.py
-rw-rw-r-- 1 nick nick 3329 10月 2 13:05 evaluation.py
-rw-rw-r-- 1 nick nick 2132 10月 2 13:47 export.py
-rw-rw-r-- 1 nick nick 2647 10月 2 13:08 model.py
drwxrwxr-x 2 nick nick 4096 10月 2 13:47 __pycache__/
-rw-rw-r-- 1 nick nick 3142 10月 2 13:08 train.py
-rw-rw-r-- 1 nick nick 10382 10月 2 04:06 utils.py
(.venv) nick@nick-Surface-Pro-9:~/WorkSpace/LearnAI-TF$
这是旧的代码目录，由于仅仅适配监督学习，设计很不合理，帮我重新设计。
根据新的配置文件，我希望包含以下几个文件：
main.py 主流程负责解析配置文件，调用其他python文件
utils.py 工具文件，包含：日志，读取配置，反射调用等函数
models.py 模型定义，通过配置文件中 models部分生成模型
optimizers.py 优化器定义，通过配置文件 optimizers 部分生成优化器
losses.py 损失函数定义，通过配置文件 losses 部分生成ah损失函数
data_manager.py 数据管理，通过配置文件 data_manager 部分生成数据加载器
training_pipeline.py 训练流程定义，通过配置文件 training_pipeline 以及上面部分的执行结果，执行训练流程
reward_functions.py 奖励函数定义，通过配置文件 reward_functions 部分，配合强化学习的训练
evaluation.py 评估流程，通过配置文件 evaluation 部分，对训练后的模型进行评估
export.py 导出模型， 通过配置文件 export 部分，将模型输出为 onnx 文件
deployment.py 部署服务，通过配置文件 deployment 部分，为模型建立 docker 容器
帮我生成这些文件，utils（以提供） 是底层代码，保持原有函数，如果不足请补充
其他文件仅能调用 utils 中的函数，需要tensorflow函数则用过 call_target 来实现所有逻辑，不要出现其他 tensorflow 函数明文
帮我生成上述所有文件
